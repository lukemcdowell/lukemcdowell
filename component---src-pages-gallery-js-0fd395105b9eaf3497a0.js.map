{"version":3,"file":"component---src-pages-gallery-js-0fd395105b9eaf3497a0.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/breadcrumb.js","webpack://my-gatsby-site/./src/components/layout.js","webpack://my-gatsby-site/./src/components/seo.js","webpack://my-gatsby-site/./node_modules/photoswipe/dist/photoswipe-lightbox.esm.js","webpack://my-gatsby-site/./src/images/DOOM.jpg","webpack://my-gatsby-site/./src/images/chris.jpg","webpack://my-gatsby-site/./src/images/daftPunk.jpg","webpack://my-gatsby-site/./src/images/dilla.jpg","webpack://my-gatsby-site/./src/images/healy.jpg","webpack://my-gatsby-site/./src/images/peteRock.jpg","webpack://my-gatsby-site/./src/utils/images.js","webpack://my-gatsby-site/./src/images/saturn.jpg","webpack://my-gatsby-site/./src/images/trailerParkBoys.jpg","webpack://my-gatsby-site/./src/pages/gallery.js"],"sourcesContent":["import React from 'react';\n\nfunction Breadcrumb({ breadcrumbPath }) {\n  return (\n    <section className=\"container\">\n      <div id=\"breadcrumbs\">\n        {breadcrumbPath.map((page, index) => {\n          const link = page === 'home' ? '' : page;\n          return index === breadcrumbPath.length - 1 ? (\n            <a key={index} href={`/${link}`}>\n              {page}\n            </a>\n          ) : (\n            <div key={index} className=\"breadcrumb-link\">\n              <a href={`/${link}`}>{page}</a>\n              <div>{'>'}</div>\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default Breadcrumb;\n","import * as React from 'react';\nimport '../styles/layout.css';\nimport Breadcrumb from './breadcrumb';\n\nconst Layout = ({ breadcrumbPath, children }) => {\n  return (\n    <>\n      <Breadcrumb breadcrumbPath={breadcrumbPath} />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport default Layout;\n","import { graphql, useStaticQuery } from 'gatsby';\nimport * as React from 'react';\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","/*!\n  * PhotoSwipe Lightbox 5.4.4 - https://photoswipe.com\n  * (c) 2024 Dmytro Semenov\n  */\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\nfunction createElement(className, tagName, appendToEl) {\n  const el = document.createElement(tagName);\n\n  if (className) {\n    el.className = className;\n  }\n\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  }\n\n  return el;\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\n\nfunction toTransformString(x, y, scale) {\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\n\n  if (scale !== undefined) {\n    propValue += ` scale3d(${scale},${scale},1)`;\n  }\n\n  return propValue;\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\n\nfunction setWidthHeight(el, w, h) {\n  el.style.width = typeof w === 'number' ? `${w}px` : w;\n  el.style.height = typeof h === 'number' ? `${h}px` : h;\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\n\nconst LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error'\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\n\nfunction specialKeyUsed(e) {\n  return 'button' in e && e.button === 1 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\n\nfunction getElementsFromOption(option, legacySelector, parent = document) {\n  /** @type {HTMLElement[]} */\n  let elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    const selector = typeof option === 'string' ? option : legacySelector;\n\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\n\nfunction isPswpClass(fn) {\n  return typeof fn === 'function' && fn.prototype && fn.prototype.goTo;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\n\nfunction isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n}\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n\n/** @typedef {import('../slide/slide.js').default} Slide */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\n\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\nclass PhotoSwipeEvent {\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\n  constructor(type, details) {\n    this.type = type;\n    this.defaultPrevented = false;\n\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n}\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\n\n\nclass Eventable {\n  constructor() {\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\n    this._listeners = {};\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\n\n    this._filters = {};\n    /** @type {PhotoSwipe | undefined} */\n\n    this.pswp = undefined;\n    /** @type {PhotoSwipeOptions | undefined} */\n\n    this.options = undefined;\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\n\n\n  addFilter(name, fn, priority = 100) {\n    var _this$_filters$name, _this$_filters$name2, _this$pswp;\n\n    if (!this._filters[name]) {\n      this._filters[name] = [];\n    }\n\n    (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.push({\n      fn,\n      priority\n    });\n    (_this$_filters$name2 = this._filters[name]) === null || _this$_filters$name2 === void 0 || _this$_filters$name2.sort((f1, f2) => f1.priority - f2.priority);\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.addFilter(name, fn, priority);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\n\n\n  removeFilter(name, fn) {\n    if (this._filters[name]) {\n      // @ts-expect-error\n      this._filters[name] = this._filters[name].filter(filter => filter.fn !== fn);\n    }\n\n    if (this.pswp) {\n      this.pswp.removeFilter(name, fn);\n    }\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\n\n\n  applyFilters(name, ...args) {\n    var _this$_filters$name3;\n\n    (_this$_filters$name3 = this._filters[name]) === null || _this$_filters$name3 === void 0 || _this$_filters$name3.forEach(filter => {\n      // @ts-expect-error\n      args[0] = filter.fn.apply(this, args);\n    });\n    return args[0];\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  on(name, fn) {\n    var _this$_listeners$name, _this$pswp2;\n\n    if (!this._listeners[name]) {\n      this._listeners[name] = [];\n    }\n\n    (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.push(fn); // When binding events to lightbox,\n    // also bind events to PhotoSwipe Core,\n    // if it's open.\n\n    (_this$pswp2 = this.pswp) === null || _this$pswp2 === void 0 || _this$pswp2.on(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\n\n\n  off(name, fn) {\n    var _this$pswp3;\n\n    if (this._listeners[name]) {\n      // @ts-expect-error\n      this._listeners[name] = this._listeners[name].filter(listener => fn !== listener);\n    }\n\n    (_this$pswp3 = this.pswp) === null || _this$pswp3 === void 0 || _this$pswp3.off(name, fn);\n  }\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\n\n\n  dispatch(name, details) {\n    var _this$_listeners$name2;\n\n    if (this.pswp) {\n      return this.pswp.dispatch(name, details);\n    }\n\n    const event =\n    /** @type {AugmentedEvent<T>} */\n    new PhotoSwipeEvent(name, details);\n    (_this$_listeners$name2 = this._listeners[name]) === null || _this$_listeners$name2 === void 0 || _this$_listeners$name2.forEach(listener => {\n      listener.call(this, event);\n    });\n    return event;\n  }\n\n}\n\nclass Placeholder {\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\n  constructor(imageSrc, container) {\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\n    this.element = createElement('pswp__img pswp__img--placeholder', imageSrc ? 'img' : 'div', container);\n\n    if (imageSrc) {\n      const imgEl =\n      /** @type {HTMLImageElement} */\n      this.element;\n      imgEl.decoding = 'async';\n      imgEl.alt = '';\n      imgEl.src = imageSrc;\n      imgEl.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.element.tagName === 'IMG') {\n      // Use transform scale() to modify img placeholder size\n      // (instead of changing width/height directly).\n      // This helps with performance, specifically in iOS15 Safari.\n      setWidthHeight(this.element, 250, 'auto');\n      this.element.style.transformOrigin = '0 0';\n      this.element.style.transform = toTransformString(0, 0, width / 250);\n    } else {\n      setWidthHeight(this.element, width, height);\n    }\n  }\n\n  destroy() {\n    var _this$element;\n\n    if ((_this$element = this.element) !== null && _this$element !== void 0 && _this$element.parentNode) {\n      this.element.remove();\n    }\n\n    this.element = null;\n  }\n\n}\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\nclass Content {\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\n  constructor(itemData, instance, index) {\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\n\n    this.element = undefined;\n    /** @type {Placeholder | undefined} */\n\n    this.placeholder = undefined;\n    /** @type {Slide | undefined} */\n\n    this.slide = undefined;\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n    this.isAttached = false;\n    this.hasSlide = false;\n    this.isDecoding = false;\n    /** @type {LoadState} */\n\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', {\n      content: this\n    });\n  }\n\n  removePlaceholder() {\n    if (this.placeholder && !this.keepPlaceholder()) {\n      // With delay, as image might be loaded, but not rendered\n      setTimeout(() => {\n        if (this.placeholder) {\n          this.placeholder.destroy();\n          this.placeholder = undefined;\n        }\n      }, 1000);\n    }\n  }\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\n\n\n  load(isLazy, reload) {\n    if (this.slide && this.usePlaceholder()) {\n      if (!this.placeholder) {\n        const placeholderSrc = this.instance.applyFilters('placeholderSrc', // use  image-based placeholder only for the first slide,\n        // as rendering (even small stretched thumbnail) is an expensive operation\n        this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n        this.placeholder = new Placeholder(placeholderSrc, this.slide.container);\n      } else {\n        const placeholderEl = this.placeholder.element; // Add placeholder to DOM if it was already created\n\n        if (placeholderEl && !placeholderEl.parentElement) {\n          this.slide.container.prepend(placeholderEl);\n        }\n      }\n    }\n\n    if (this.element && !reload) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentLoad', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.isImageContent()) {\n      this.element = createElement('pswp__img', 'img'); // Start loading only after width is defined, as sizes might depend on it.\n      // Due to Safari feature, we must define sizes before srcset.\n\n      if (this.displayedImageWidth) {\n        this.loadImage(isLazy);\n      }\n    } else {\n      this.element = createElement('pswp__content', 'div');\n      this.element.innerHTML = this.data.html || '';\n    }\n\n    if (reload && this.slide) {\n      this.slide.updateContentSize(true);\n    }\n  }\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\n\n\n  loadImage(isLazy) {\n    var _this$data$src, _this$data$alt;\n\n    if (!this.isImageContent() || !this.element || this.instance.dispatch('contentLoadImage', {\n      content: this,\n      isLazy\n    }).defaultPrevented) {\n      return;\n    }\n\n    const imageElement =\n    /** @type HTMLImageElement */\n    this.element;\n    this.updateSrcsetSizes();\n\n    if (this.data.srcset) {\n      imageElement.srcset = this.data.srcset;\n    }\n\n    imageElement.src = (_this$data$src = this.data.src) !== null && _this$data$src !== void 0 ? _this$data$src : '';\n    imageElement.alt = (_this$data$alt = this.data.alt) !== null && _this$data$alt !== void 0 ? _this$data$alt : '';\n    this.state = LOAD_STATE.LOADING;\n\n    if (imageElement.complete) {\n      this.onLoaded();\n    } else {\n      imageElement.onload = () => {\n        this.onLoaded();\n      };\n\n      imageElement.onerror = () => {\n        this.onError();\n      };\n    }\n  }\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\n\n\n  setSlide(slide) {\n    this.slide = slide;\n    this.hasSlide = true;\n    this.instance = slide.pswp; // todo: do we need to unset slide?\n  }\n  /**\r\n   * Content load success handler\r\n   */\n\n\n  onLoaded() {\n    this.state = LOAD_STATE.LOADED;\n\n    if (this.slide && this.element) {\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        content: this\n      }); // if content is reloaded\n\n      if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n        this.append();\n        this.slide.updateContentSize(true);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }\n  /**\r\n   * Content load error handler\r\n   */\n\n\n  onError() {\n    this.state = LOAD_STATE.ERROR;\n\n    if (this.slide) {\n      this.displayError();\n      this.instance.dispatch('loadComplete', {\n        slide: this.slide,\n        isError: true,\n        content: this\n      });\n      this.instance.dispatch('loadError', {\n        slide: this.slide,\n        content: this\n      });\n    }\n  }\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\n\n\n  isLoading() {\n    return this.instance.applyFilters('isContentLoading', this.state === LOAD_STATE.LOADING, this);\n  }\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\n\n\n  isError() {\n    return this.state === LOAD_STATE.ERROR;\n  }\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\n\n\n  isImageContent() {\n    return this.type === 'image';\n  }\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\n\n\n  setDisplayedSize(width, height) {\n    if (!this.element) {\n      return;\n    }\n\n    if (this.placeholder) {\n      this.placeholder.setDisplayedSize(width, height);\n    }\n\n    if (this.instance.dispatch('contentResize', {\n      content: this,\n      width,\n      height\n    }).defaultPrevented) {\n      return;\n    }\n\n    setWidthHeight(this.element, width, height);\n\n    if (this.isImageContent() && !this.isError()) {\n      const isInitialSizeUpdate = !this.displayedImageWidth && width;\n      this.displayedImageWidth = width;\n      this.displayedImageHeight = height;\n\n      if (isInitialSizeUpdate) {\n        this.loadImage(false);\n      } else {\n        this.updateSrcsetSizes();\n      }\n\n      if (this.slide) {\n        this.instance.dispatch('imageSizeChange', {\n          slide: this.slide,\n          width,\n          height,\n          content: this\n        });\n      }\n    }\n  }\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\n\n\n  isZoomable() {\n    return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== LOAD_STATE.ERROR, this);\n  }\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\n\n\n  updateSrcsetSizes() {\n    // Handle srcset sizes attribute.\n    //\n    // Never lower quality, if it was increased previously.\n    // Chrome does this automatically, Firefox and Safari do not,\n    // so we store largest used size in dataset.\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\n      return;\n    }\n\n    const image =\n    /** @type HTMLImageElement */\n    this.element;\n    const sizesWidth = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);\n\n    if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n      image.sizes = sizesWidth + 'px';\n      image.dataset.largestUsedSize = String(sizesWidth);\n    }\n  }\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\n\n\n  usePlaceholder() {\n    return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);\n  }\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\n\n\n  lazyLoad() {\n    if (this.instance.dispatch('contentLazyLoad', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.load(true);\n  }\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\n\n\n  keepPlaceholder() {\n    return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);\n  }\n  /**\r\n   * Destroy the content\r\n   */\n\n\n  destroy() {\n    this.hasSlide = false;\n    this.slide = undefined;\n\n    if (this.instance.dispatch('contentDestroy', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    this.remove();\n\n    if (this.placeholder) {\n      this.placeholder.destroy();\n      this.placeholder = undefined;\n    }\n\n    if (this.isImageContent() && this.element) {\n      this.element.onload = null;\n      this.element.onerror = null;\n      this.element = undefined;\n    }\n  }\n  /**\r\n   * Display error message\r\n   */\n\n\n  displayError() {\n    if (this.slide) {\n      var _this$instance$option, _this$instance$option2;\n\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\n      errorMsgEl.innerText = (_this$instance$option = (_this$instance$option2 = this.instance.options) === null || _this$instance$option2 === void 0 ? void 0 : _this$instance$option2.errorMsg) !== null && _this$instance$option !== void 0 ? _this$instance$option : '';\n      errorMsgEl =\n      /** @type {HTMLDivElement} */\n      this.instance.applyFilters('contentErrorElement', errorMsgEl, this);\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\n      this.element.appendChild(errorMsgEl);\n      this.slide.container.innerText = '';\n      this.slide.container.appendChild(this.element);\n      this.slide.updateContentSize(true);\n      this.removePlaceholder();\n    }\n  }\n  /**\r\n   * Append the content\r\n   */\n\n\n  append() {\n    if (this.isAttached || !this.element) {\n      return;\n    }\n\n    this.isAttached = true;\n\n    if (this.state === LOAD_STATE.ERROR) {\n      this.displayError();\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppend', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    const supportsDecode = ('decode' in this.element);\n\n    if (this.isImageContent()) {\n      // Use decode() on nearby slides\n      //\n      // Nearby slide images are in DOM and not hidden via display:none.\n      // However, they are placed offscreen (to the left and right side).\n      //\n      // Some browsers do not composite the image until it's actually visible,\n      // using decode() helps.\n      //\n      // You might ask \"why dont you just decode() and then append all images\",\n      // that's because I want to show image before it's fully loaded,\n      // as browser can render parts of image while it is loading.\n      // We do not do this in Safari due to partial loading bug.\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n        this.isDecoding = true; // purposefully using finally instead of then,\n        // as if srcset sizes changes dynamically - it may cause decode error\n\n        /** @type {HTMLImageElement} */\n\n        this.element.decode().catch(() => {}).finally(() => {\n          this.isDecoding = false;\n          this.appendImage();\n        });\n      } else {\n        this.appendImage();\n      }\n    } else if (this.slide && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n  }\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\n\n\n  activate() {\n    if (this.instance.dispatch('contentActivate', {\n      content: this\n    }).defaultPrevented || !this.slide) {\n      return;\n    }\n\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\n      // add image to slide when it becomes active,\n      // even if it's not finished decoding\n      this.appendImage();\n    } else if (this.isError()) {\n      this.load(false, true); // try to reload\n    }\n\n    if (this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\n    }\n  }\n  /**\r\n   * Deactivate the content\r\n   */\n\n\n  deactivate() {\n    this.instance.dispatch('contentDeactivate', {\n      content: this\n    });\n\n    if (this.slide && this.slide.holderElement) {\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n  /**\r\n   * Remove the content from DOM\r\n   */\n\n\n  remove() {\n    this.isAttached = false;\n\n    if (this.instance.dispatch('contentRemove', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    }\n\n    if (this.element && this.element.parentNode) {\n      this.element.remove();\n    }\n\n    if (this.placeholder && this.placeholder.element) {\n      this.placeholder.element.remove();\n    }\n  }\n  /**\r\n   * Append the image content to slide container\r\n   */\n\n\n  appendImage() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (this.instance.dispatch('contentAppendImage', {\n      content: this\n    }).defaultPrevented) {\n      return;\n    } // ensure that element exists and is not already appended\n\n\n    if (this.slide && this.element && !this.element.parentNode) {\n      this.slide.container.appendChild(this.element);\n    }\n\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n      this.removePlaceholder();\n    }\n  }\n\n}\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\nfunction getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\n\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\n\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  let paddingValue = 0;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1); // @ts-expect-error\n\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return Number(paddingValue) || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\n\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x - parsePaddingOption('left', options, viewportSize, itemData, index) - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y - parsePaddingOption('top', options, viewportSize, itemData, index) - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n\nconst MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\n\nclass ZoomLevel {\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\n  constructor(options, itemData, index, pswp) {\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n    /** @type { Point | null } */\n\n    this.panAreaSize = null;\n    /** @type { Point | null } */\n\n    this.elementSize = null;\n    this.fit = 1;\n    this.fill = 1;\n    this.vFill = 1;\n    this.initial = 1;\n    this.secondary = 1;\n    this.max = 1;\n    this.min = 1;\n  }\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\n\n\n  update(maxWidth, maxHeight, panAreaSize) {\n    /** @type {Point} */\n    const elementSize = {\n      x: maxWidth,\n      y: maxHeight\n    };\n    this.elementSize = elementSize;\n    this.panAreaSize = panAreaSize;\n    const hRatio = panAreaSize.x / elementSize.x;\n    const vRatio = panAreaSize.y / elementSize.y;\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio); // zoom.vFill defines zoom level of the image\n    // when it has 100% of viewport vertical space (height)\n\n    this.vFill = Math.min(1, vRatio);\n    this.initial = this._getInitial();\n    this.secondary = this._getSecondary();\n    this.max = Math.max(this.initial, this.secondary, this._getMax());\n    this.min = Math.min(this.fit, this.initial, this.secondary);\n\n    if (this.pswp) {\n      this.pswp.dispatch('zoomLevelsUpdate', {\n        zoomLevels: this,\n        slideData: this.itemData\n      });\n    }\n  }\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\n\n\n  _parseZoomLevelOption(optionPrefix) {\n    const optionName =\n    /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */\n    optionPrefix + 'ZoomLevel';\n    const optionValue = this.options[optionName];\n\n    if (!optionValue) {\n      return;\n    }\n\n    if (typeof optionValue === 'function') {\n      return optionValue(this);\n    }\n\n    if (optionValue === 'fill') {\n      return this.fill;\n    }\n\n    if (optionValue === 'fit') {\n      return this.fit;\n    }\n\n    return Number(optionValue);\n  }\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getSecondary() {\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\n\n    if (currZoomLevel) {\n      return currZoomLevel;\n    } // 3x of \"fit\" state, but not larger than original\n\n\n    currZoomLevel = Math.min(1, this.fit * 3);\n\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n    }\n\n    return currZoomLevel;\n  }\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getInitial() {\n    return this._parseZoomLevelOption('initial') || this.fit;\n  }\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\n\n\n  _getMax() {\n    // max zoom level is x4 from \"fit state\",\n    // used for zoom gesture and ctrl/trackpad zoom\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\n  }\n\n}\n\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\n\nfunction lazyLoadData(itemData, instance, index) {\n  const content = instance.createContentFromData(itemData, index);\n  /** @type {ZoomLevel | undefined} */\n\n  let zoomLevel;\n  const {\n    options\n  } = instance; // We need to know dimensions of the image to preload it,\n  // as it might use srcset, and we need to define sizes\n\n  if (options) {\n    zoomLevel = new ZoomLevel(options, itemData, -1);\n    let viewportSize;\n\n    if (instance.pswp) {\n      viewportSize = instance.pswp.viewportSize;\n    } else {\n      viewportSize = getViewportSize(options, instance);\n    }\n\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n    zoomLevel.update(content.width, content.height, panAreaSize);\n  }\n\n  content.lazyLoad();\n\n  if (zoomLevel) {\n    content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n  }\n\n  return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\n\nfunction lazyLoadSlide(index, instance) {\n  const itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', {\n    index,\n    itemData\n  }).defaultPrevented) {\n    return;\n  }\n\n  return lazyLoadData(itemData, instance, index);\n}\n\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\n\nclass PhotoSwipeBase extends Eventable {\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\n  getNumItems() {\n    var _this$options;\n\n    let numItems = 0;\n    const dataSource = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : _this$options.dataSource;\n\n    if (dataSource && 'length' in dataSource) {\n      // may be an array or just object with length property\n      numItems = dataSource.length;\n    } else if (dataSource && 'gallery' in dataSource) {\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      if (dataSource.items) {\n        numItems = dataSource.items.length;\n      }\n    } // legacy event, before filters were introduced\n\n\n    const event = this.dispatch('numItems', {\n      dataSource,\n      numItems\n    });\n    return this.applyFilters('numItems', event.numItems, dataSource);\n  }\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\n\n\n  createContentFromData(slideData, index) {\n    return new Content(slideData, this, index);\n  }\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\n\n\n  getItemData(index) {\n    var _this$options2;\n\n    const dataSource = (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.dataSource;\n    /** @type {SlideData | HTMLElement} */\n\n    let dataSourceItem = {};\n\n    if (Array.isArray(dataSource)) {\n      // Datasource is an array of elements\n      dataSourceItem = dataSource[index];\n    } else if (dataSource && 'gallery' in dataSource) {\n      // dataSource has gallery property,\n      // thus it was created by Lightbox, based on\n      // gallery and children options\n      // query DOM elements\n      if (!dataSource.items) {\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n      }\n\n      dataSourceItem = dataSource.items[index];\n    }\n\n    let itemData = dataSourceItem;\n\n    if (itemData instanceof Element) {\n      itemData = this._domElementToItemData(itemData);\n    } // Dispatching the itemData event,\n    // it's a legacy verion before filters were introduced\n\n\n    const event = this.dispatch('itemData', {\n      itemData: itemData || {},\n      index\n    });\n    return this.applyFilters('itemData', event.itemData, index);\n  }\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\n\n\n  _getGalleryDOMElements(galleryElement) {\n    var _this$options3, _this$options4;\n\n    if ((_this$options3 = this.options) !== null && _this$options3 !== void 0 && _this$options3.children || (_this$options4 = this.options) !== null && _this$options4 !== void 0 && _this$options4.childSelector) {\n      return getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n    }\n\n    return [galleryElement];\n  }\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\n\n\n  _domElementToItemData(element) {\n    /** @type {SlideData} */\n    const itemData = {\n      element\n    };\n    const linkEl =\n    /** @type {HTMLAnchorElement} */\n    element.tagName === 'A' ? element : element.querySelector('a');\n\n    if (linkEl) {\n      // src comes from data-pswp-src attribute,\n      // if it's empty link href is used\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n      if (linkEl.dataset.pswpSrcset) {\n        itemData.srcset = linkEl.dataset.pswpSrcset;\n      }\n\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0; // support legacy w & h properties\n\n      itemData.w = itemData.width;\n      itemData.h = itemData.height;\n\n      if (linkEl.dataset.pswpType) {\n        itemData.type = linkEl.dataset.pswpType;\n      }\n\n      const thumbnailEl = element.querySelector('img');\n\n      if (thumbnailEl) {\n        var _thumbnailEl$getAttri;\n\n        // msrc is URL to placeholder image that's displayed before large image is loaded\n        // by default it's displayed only for the first slide\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n        itemData.alt = (_thumbnailEl$getAttri = thumbnailEl.getAttribute('alt')) !== null && _thumbnailEl$getAttri !== void 0 ? _thumbnailEl$getAttri : '';\n      }\n\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n        itemData.thumbCropped = true;\n      }\n    }\n\n    return this.applyFilters('domItemData', itemData, element, linkEl);\n  }\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\n\n\n  lazyLoadData(itemData, index) {\n    return lazyLoadData(itemData, this, index);\n  }\n\n}\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('../slide/content.js').default} Content */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\n\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\n\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\n  constructor(options) {\n    super();\n    /** @type {PhotoSwipeOptions} */\n\n    this.options = options || {};\n    this._uid = 0;\n    this.shouldOpen = false;\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\n\n    this._preloadedContent = undefined;\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\n  }\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\n\n\n  init() {\n    // Bind click events to each gallery\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.addEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n  /**\r\n   * @param {MouseEvent} e\r\n   */\n\n\n  onThumbnailsClick(e) {\n    // Exit and allow default browser action if:\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\n    || window.pswp) {\n      // ... if PhotoSwipe is already open\n      return;\n    } // If both clientX and clientY are 0 or not defined,\n    // the event is likely triggered by keyboard,\n    // so we do not pass the initialPoint\n    //\n    // Note that some screen readers emulate the mouse position,\n    // so it's not the ideal way to detect them.\n    //\n\n    /** @type {Point | null} */\n\n\n    let initialPoint = {\n      x: e.clientX,\n      y: e.clientY\n    };\n\n    if (!initialPoint.x && !initialPoint.y) {\n      initialPoint = null;\n    }\n\n    let clickedIndex = this.getClickedIndex(e);\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\n    /** @type {DataSource} */\n\n    const dataSource = {\n      gallery:\n      /** @type {HTMLElement} */\n      e.currentTarget\n    };\n\n    if (clickedIndex >= 0) {\n      e.preventDefault();\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\n    }\n  }\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\n\n\n  getClickedIndex(e) {\n    // legacy option\n    if (this.options.getClickedIndexFn) {\n      return this.options.getClickedIndexFn.call(this, e);\n    }\n\n    const clickedTarget =\n    /** @type {HTMLElement} */\n    e.target;\n    const childElements = getElementsFromOption(this.options.children, this.options.childSelector,\n    /** @type {HTMLElement} */\n    e.currentTarget);\n    const clickedChildIndex = childElements.findIndex(child => child === clickedTarget || child.contains(clickedTarget));\n\n    if (clickedChildIndex !== -1) {\n      return clickedChildIndex;\n    } else if (this.options.children || this.options.childSelector) {\n      // click wasn't on a child element\n      return -1;\n    } // There is only one item (which is the gallery)\n\n\n    return 0;\n  }\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\n\n\n  loadAndOpen(index, dataSource, initialPoint) {\n    // Check if the gallery is already open\n    if (window.pswp || !this.options) {\n      return false;\n    } // Use the first gallery element if dataSource is not provided\n\n\n    if (!dataSource && this.options.gallery && this.options.children) {\n      const galleryElements = getElementsFromOption(this.options.gallery);\n\n      if (galleryElements[0]) {\n        dataSource = {\n          gallery: galleryElements[0]\n        };\n      }\n    } // set initial index\n\n\n    this.options.index = index; // define options for PhotoSwipe constructor\n\n    this.options.initialPointerPos = initialPoint;\n    this.shouldOpen = true;\n    this.preload(index, dataSource);\n    return true;\n  }\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\n\n\n  preload(index, dataSource) {\n    const {\n      options\n    } = this;\n\n    if (dataSource) {\n      options.dataSource = dataSource;\n    } // Add the main module\n\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\n\n\n    const promiseArray = [];\n    const pswpModuleType = typeof options.pswpModule;\n\n    if (isPswpClass(options.pswpModule)) {\n      promiseArray.push(Promise.resolve(\n      /** @type {Type<PhotoSwipe>} */\n      options.pswpModule));\n    } else if (pswpModuleType === 'string') {\n      throw new Error('pswpModule as string is no longer supported');\n    } else if (pswpModuleType === 'function') {\n      promiseArray.push(\n      /** @type {() => Promise<Type<PhotoSwipe>>} */\n      options.pswpModule());\n    } else {\n      throw new Error('pswpModule is not valid');\n    } // Add custom-defined promise, if any\n\n\n    if (typeof options.openPromise === 'function') {\n      // allow developers to perform some task before opening\n      promiseArray.push(options.openPromise());\n    }\n\n    if (options.preloadFirstSlide !== false && index >= 0) {\n      this._preloadedContent = lazyLoadSlide(index, this);\n    } // Wait till all promises resolve and open PhotoSwipe\n\n\n    const uid = ++this._uid;\n    Promise.all(promiseArray).then(iterableModules => {\n      if (this.shouldOpen) {\n        const mainModule = iterableModules[0];\n\n        this._openPhotoswipe(mainModule, uid);\n      }\n    });\n  }\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\n\n\n  _openPhotoswipe(module, uid) {\n    // Cancel opening if UID doesn't match the current one\n    // (if user clicked on another gallery item before current was loaded).\n    //\n    // Or if shouldOpen flag is set to false\n    // (developer may modify it via public API)\n    if (uid !== this._uid && this.shouldOpen) {\n      return;\n    }\n\n    this.shouldOpen = false; // PhotoSwipe is already open\n\n    if (window.pswp) {\n      return;\n    }\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\n\n\n    const pswp = typeof module === 'object' ? new module.default(this.options) // eslint-disable-line\n    : new module(this.options); // eslint-disable-line\n\n    this.pswp = pswp;\n    window.pswp = pswp; // map listeners from Lightbox to PhotoSwipe Core\n\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\n\n    Object.keys(this._listeners).forEach(name => {\n      var _this$_listeners$name;\n\n      (_this$_listeners$name = this._listeners[name]) === null || _this$_listeners$name === void 0 || _this$_listeners$name.forEach(fn => {\n        pswp.on(name,\n        /** @type {EventCallback<typeof name>} */\n        fn);\n      });\n    }); // same with filters\n\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\n\n    Object.keys(this._filters).forEach(name => {\n      var _this$_filters$name;\n\n      (_this$_filters$name = this._filters[name]) === null || _this$_filters$name === void 0 || _this$_filters$name.forEach(filter => {\n        pswp.addFilter(name, filter.fn, filter.priority);\n      });\n    });\n\n    if (this._preloadedContent) {\n      pswp.contentLoader.addToCache(this._preloadedContent);\n      this._preloadedContent = undefined;\n    }\n\n    pswp.on('destroy', () => {\n      // clean up public variables\n      this.pswp = undefined;\n      delete window.pswp;\n    });\n    pswp.init();\n  }\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\n\n\n  destroy() {\n    var _this$pswp;\n\n    (_this$pswp = this.pswp) === null || _this$pswp === void 0 || _this$pswp.destroy();\n    this.shouldOpen = false;\n    this._listeners = {};\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector).forEach(galleryElement => {\n      galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\n    });\n  }\n\n}\n\nexport { PhotoSwipeLightbox as default };\n//# sourceMappingURL=photoswipe-lightbox.esm.js.map\n","export default __webpack_public_path__ + \"static/DOOM-67c0c5b2eba10387bfc3ae4f9630c465.jpg\";","export default __webpack_public_path__ + \"static/chris-480c5db8e596c86c660a0f492e7cb1e9.jpg\";","export default __webpack_public_path__ + \"static/daftPunk-b3d601b0f11b42e378737c98d07eae0a.jpg\";","export default __webpack_public_path__ + \"static/dilla-43995cf7e435f1e8c8df9871bce913ec.jpg\";","export default __webpack_public_path__ + \"static/healy-6f33340d604c37603c2d94c846ce5dba.jpg\";","export default __webpack_public_path__ + \"static/peteRock-7155bb54b9609bebc257caf8031e6dbe.jpg\";","import DOOM from '../images/DOOM.jpg';\nimport chris from '../images/chris.jpg';\nimport daftPunk from '../images/daftPunk.jpg';\nimport dilla from '../images/dilla.jpg';\nimport healy from '../images/healy.jpg';\nimport peteRock from '../images/peteRock.jpg';\nimport saturn from '../images/saturn.jpg';\nimport trailerParkBoys from '../images/trailerParkBoys.jpg';\n\nconst images = [\n  {\n    src: healy,\n    width: 960,\n    height: 593,\n    title: 'Healy',\n  },\n  {\n    src: DOOM,\n    width: 640,\n    height: 853,\n    title: 'DOOM',\n  },\n  {\n    src: daftPunk,\n    width: 650,\n    height: 803,\n    title: 'Daft Punk',\n  },\n  {\n    src: chris,\n    width: 353,\n    height: 353,\n    title: 'Chris',\n  },\n  {\n    src: dilla,\n    width: 1600,\n    height: 900,\n    title: 'Dilla',\n  },\n  {\n    src: saturn,\n    width: 1080,\n    height: 608,\n    title: 'Saturn',\n  },\n  {\n    src: trailerParkBoys,\n    width: 1400,\n    height: 700,\n    title: 'TPB',\n  },\n  {\n    src: peteRock,\n    width: 736,\n    height: 485,\n    title: 'Pete Rock',\n  },\n];\n\nexport default images;\n","export default __webpack_public_path__ + \"static/saturn-ece4a90acfb397360f4cfc24deacd442.jpg\";","export default __webpack_public_path__ + \"static/trailerParkBoys-2981ea4a07d4bd643a47d57432dba0a9.jpg\";","import PhotoSwipe from 'photoswipe';\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\nimport 'photoswipe/style.css';\nimport * as React from 'react';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport '../styles/gallery.css';\nimport images from '../utils/images';\n\nconst Gallery = () => {\n  React.useEffect(() => {\n    const lightbox = new PhotoSwipeLightbox({\n      gallery: '#gallery',\n      children: 'a',\n      pswpModule: PhotoSwipe,\n    });\n    lightbox.init();\n\n    return () => {\n      lightbox.destroy();\n    };\n  }, []);\n\n  return (\n    <Layout breadcrumbPath={['home', 'gallery']}>\n      <section id=\"gallery-container\">\n        <div id=\"gallery\">\n          {images.map((image, index) => (\n            <a\n              href={image.src}\n              data-pswp-width={image.width}\n              data-pswp-height={image.height}\n              key={index}\n            >\n              <img src={image.src} alt={image.title} />\n            </a>\n          ))}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport const Head = () => <Seo title=\"Gallery\" />;\n\nexport default Gallery;\n"],"names":["breadcrumbPath","className","id","map","page","index","link","length","key","href","children","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","createElement","tagName","appendToEl","el","document","appendChild","setWidthHeight","w","h","style","width","height","LOAD_STATE","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","PhotoSwipeEvent","constructor","type","details","this","defaultPrevented","Object","assign","preventDefault","Eventable","_listeners","_filters","pswp","undefined","options","addFilter","fn","priority","_this$_filters$name","_this$_filters$name2","_this$pswp","push","sort","f1","f2","removeFilter","filter","applyFilters","args","_this$_filters$name3","forEach","apply","on","_this$_listeners$name","_this$pswp2","off","_this$pswp3","listener","dispatch","_this$_listeners$name2","event","call","Placeholder","imageSrc","container","element","imgEl","decoding","alt","src","setAttribute","setDisplayedSize","transformOrigin","transform","x","y","scale","propValue","toTransformString","destroy","_this$element","parentNode","remove","Content","itemData","instance","data","placeholder","slide","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","isDecoding","state","removePlaceholder","keepPlaceholder","setTimeout","load","isLazy","reload","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","_this$data$src","_this$data$alt","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","_this$instance$option","_this$instance$option2","errorMsgEl","innerText","errorMsg","supportsDecode","decode","catch","finally","appendImage","activate","holderElement","deactivate","parsePaddingOption","prop","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","ZoomLevel","panAreaSize","elementSize","fit","fill","vFill","initial","secondary","max","min","update","maxWidth","maxHeight","hRatio","vRatio","Math","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","zoomLevel","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","getViewportSize","getPanAreaSize","ceil","PhotoSwipeBase","getNumItems","_this$options","numItems","dataSource","items","_getGalleryDOMElements","gallery","getItemData","_this$options2","dataSourceItem","_domElementToItemData","galleryElement","_this$options3","_this$options4","childSelector","linkEl","querySelector","pswpSrc","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","_thumbnailEl$getAttri","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","PhotoSwipeLightbox","super","_uid","shouldOpen","_preloadedContent","onThumbnailsClick","bind","init","gallerySelector","addEventListener","e","button","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","target","clickedChildIndex","findIndex","child","contains","galleryElements","initialPointerPos","preload","promiseArray","pswpModuleType","pswpModule","prototype","goTo","Promise","resolve","Error","openPromise","preloadFirstSlide","lazyLoadSlide","uid","all","then","iterableModules","mainModule","_openPhotoswipe","module","default","keys","contentLoader","addToCache","removeEventListener","healy","DOOM","daftPunk","chris","dilla","peteRock","Head","React","lightbox","PhotoSwipe","images"],"sourceRoot":""}